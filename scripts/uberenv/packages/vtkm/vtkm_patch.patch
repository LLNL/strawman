From b77e6609ecdcfc630795f04bffc75fa881b7c352 Mon Sep 17 00:00:00 2001
From: mclarsen <larsen30@llnl.gov>
Date: Fri, 4 Nov 2016 14:15:27 -0700
Subject: [PATCH 1/2] Strawman vtkm fix

---
 vtkm/rendering/MapperVolume.h |    4 ++--
 vtkm/rendering/Triangulator.h |    4 ----
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/vtkm/rendering/MapperVolume.h b/vtkm/rendering/MapperVolume.h
index dbc02b5..6e822b6 100644
--- a/vtkm/rendering/MapperVolume.h
+++ b/vtkm/rendering/MapperVolume.h
@@ -46,9 +46,9 @@ public:
   }
 
   VTKM_CONT_EXPORT
-  void SetNumberOfSamples(const vtkm::Int32 &numSamples)
+  void SetSampleDistance(const vtkm::Float32 &distance)
   {
-    Tracer.SetNumberOfSamples(numSamples);
+    Tracer.SetSampleDistance(distance);
   }
 
   VTKM_CONT_EXPORT
diff --git a/vtkm/rendering/Triangulator.h b/vtkm/rendering/Triangulator.h
index 5d7cb46..933f1cc 100644
--- a/vtkm/rendering/Triangulator.h
+++ b/vtkm/rendering/Triangulator.h
@@ -165,10 +165,6 @@ public:
         triangle[3] = cellIndices[0];
         OutputIndices.Set(triangleOffset+11, triangle);
       }
-      else
-      {
-        throw vtkm::cont::ErrorControlBadType("Unsupported dimension for structured trianglulation");
-      }
     }
 
   };
-- 
1.7.1


From 05796c2f0689a355490282323bc0568493be18ea Mon Sep 17 00:00:00 2001
From: mclarsen <larsen30@llnl.gov>
Date: Mon, 7 Nov 2016 09:19:50 -0800
Subject: [PATCH 2/2] fixed bug in vr

---
 vtkm/rendering/MapperVolume.h                      |    6 +++
 .../raytracing/VolumeRendererStructured.h          |   35 ++++++++++++-------
 2 files changed, 28 insertions(+), 13 deletions(-)

diff --git a/vtkm/rendering/MapperVolume.h b/vtkm/rendering/MapperVolume.h
index 6e822b6..1d207be 100644
--- a/vtkm/rendering/MapperVolume.h
+++ b/vtkm/rendering/MapperVolume.h
@@ -52,6 +52,12 @@ public:
   }
 
   VTKM_CONT_EXPORT
+  void SetCompositeBackground(bool on)
+  {
+    Tracer.SetCompositeBackground(on);
+  }
+
+  VTKM_CONT_EXPORT
   void SetCanvas(vtkm::rendering::Canvas *canvas)
   {
     if(canvas != NULL)
diff --git a/vtkm/rendering/raytracing/VolumeRendererStructured.h b/vtkm/rendering/raytracing/VolumeRendererStructured.h
index 91839b2..f6967a3 100644
--- a/vtkm/rendering/raytracing/VolumeRendererStructured.h
+++ b/vtkm/rendering/raytracing/VolumeRendererStructured.h
@@ -544,7 +544,7 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
         if( tx > 1.f || tx < 0.f) newCell = true;
         if( ty > 1.f || ty < 0.f) newCell = true;
         if( tz > 1.f || tz < 0.f) newCell = true;
-
+        vtkm::Vec<vtkm::Float32,4> sampleColor;
         if(newCell)
         {
 
@@ -558,6 +558,14 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
           bottomLeft = Coordinates.Get(cellIdx);
           scalar0 = vtkm::Float32(scalars.Get(cellIdx));
 
+          //normalize scalar
+          //
+          scalar0 = (scalar0 - MinScalar) * InverseDeltaScalar;
+
+          vtkm::Id colorIndex = vtkm::Id(scalar0 * ColorMapSize);
+          colorIndex = vtkm::Min(ColorMapSize, vtkm::Max(vtkm::Id(0),colorIndex));
+          sampleColor = ColorMap.Get(colorIndex);
+
           tx = (sampleLocation[0] - bottomLeft[0]) * invSpacing[0];
           ty = (sampleLocation[1] - bottomLeft[1]) * invSpacing[1];
           tz = (sampleLocation[2] - bottomLeft[2]) * invSpacing[2];
@@ -566,14 +574,6 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
         }
 
 
-        //normalize scalar
-        scalar0 = (scalar0 - MinScalar) * InverseDeltaScalar;
-
-        vtkm::Id colorIndex = vtkm::Id(scalar0 * ColorMapSize);
-        colorIndex = vtkm::Min(ColorMapSize, vtkm::Max(vtkm::Id(0),colorIndex));
-        vtkm::Vec<vtkm::Float32,4> sampleColor = ColorMap.Get(colorIndex);
-        //sampleColor[3] = .05f;
-
         //composite
         sampleColor[3] *= (1.f - color[3]);
         color[0] = color[0] + sampleColor[0] * sampleColor[3];
@@ -929,6 +929,7 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
     IsSceneDirty = false;
     IsUniformDataSet = true;
     SampleDistance = -1.f;
+    DoCompositeBackground = true;
   }
 
   VTKM_CONT_EXPORT
@@ -1064,10 +1065,11 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
         }
      }
 
-
-    vtkm::worklet::DispatcherMapField< CompositeBackground >( CompositeBackground( BackgroundColor ) )
-      .Invoke( camera.FrameBuffer );
-
+    if(DoCompositeBackground)
+    {
+      vtkm::worklet::DispatcherMapField< CompositeBackground >( CompositeBackground( BackgroundColor ) )
+        .Invoke( camera.FrameBuffer );
+    }
     camera.WriteToSurface(canvas, Rays.MinDistance);
   } //Render
 
@@ -1084,9 +1086,16 @@ class SamplerCellAssocRect : public vtkm::worklet::WorkletMapField
   {
     BackgroundColor = backgroundColor;
   }
+  
+  VTKM_CONT_EXPORT
+  void SetCompositeBackground(bool on)
+  {
+    DoCompositeBackground = on;
+  }
 
 protected:
   bool IsSceneDirty;
+  bool DoCompositeBackground;
   bool IsUniformDataSet;
   VolumeRay<DeviceAdapter> Rays;
   Camera<DeviceAdapter> camera;
-- 
1.7.1

